name: Wails Build and Release

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches: ["master"]

jobs:
  build:
    name: Build (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-22.04
            platform: linux/amd64
          - os: windows-latest
            platform: windows/amd64

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      # --- Linux 依赖 ---
      - name: Install Linux deps
        if: matrix.os == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config \
            libgtk-3-dev libwebkit2gtk-4.0-dev \
            libglib2.0-dev libayatana-appindicator3-dev librsvg2-dev

      # --- Windows 依赖（为 cgo 提供编译器）---
      - name: Install Windows deps (mingw-w64)
        if: matrix.os == 'windows-latest'
        shell: powershell
        run: |
          choco install -y mingw
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22.x"
          check-latest: true

      - name: Install Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@latest

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install Frontend Dependencies
        run: |
          cd frontend
          npm ci

      - name: Build with Wails
        env:
          # 确保启用 cgo（默认启用；显式声明更稳妥）
          CGO_ENABLED: "1"
        run: |
          wails doctor
          wails build -platform ${{ matrix.platform }}

      - name: Set Output Path
        id: set-output
        run: echo "release_path=build/bin" >> $GITHUB_OUTPUT

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: release-binaries-${{ matrix.os }}
          path: build/bin

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          pattern: release-binaries-*
          merge-multiple: true
          path: build/bin

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          generate_release_notes: true
          files: build/bin/**
